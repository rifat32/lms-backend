{
    "openapi": "3.0.0",
    "info": {
        "title": "LMS Documentation",
        "description": "L5 Swagger OpenApi description for hrm project",
        "contact": {
            "email": "drrifatalashwad0@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000/api",
            "description": "API Server"
        }
    ],
    "paths": {
        "/v1.0/auth/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user (role: Any Role)",
                "operationId": "b09cb081adb0967a04e8a9f34b8357c1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "first_name",
                                    "last_name",
                                    "email",
                                    "password",
                                    "role"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Mr."
                                    },
                                    "first_name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "admin@yopmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "12345678@We"
                                    },
                                    "role": {
                                        "type": "string",
                                        "example": "admin"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Mr."
                                        },
                                        "first_name": {
                                            "type": "string",
                                            "example": "John"
                                        },
                                        "last_name": {
                                            "type": "string",
                                            "example": "Doe"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "admin@yopmail.com"
                                        },
                                        "role": {
                                            "type": "string",
                                            "example": "admin"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-09-17T12:00:00Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The email field is required"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/forgetpassword/reset/{token}": {
            "patch": {
                "tags": [
                    "Auth"
                ],
                "summary": "This method is to change password",
                "description": "This method is to change password",
                "operationId": "changePasswordByToken",
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "description": "token",
                        "required": true,
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "password"
                                ],
                                "properties": {
                                    "password": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "aaaaaaaa"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/forgetpassword": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "This method is to store token",
                "description": "This method is to store token",
                "operationId": "storeToken",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test@g.c"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/v1.0/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login user (role: Any Role)",
                "operationId": "e0debbe8127995a63b56ddd8e7051a29",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "admin@yopmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "12345678@We"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "example": 3600
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Mr."
                                                },
                                                "first_name": {
                                                    "type": "string",
                                                    "example": "John"
                                                },
                                                "last_name": {
                                                    "type": "string",
                                                    "example": "Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "admin@yopmail.com"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "admin"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1.0/register-user-with-business": {
            "post": {
                "tags": [
                    "Auth",
                    "business_management"
                ],
                "summary": "Register a user and create a business (role: Super Admin Only)",
                "description": "Create a new user and their business. Typically used by admin or self-registration depending on implementation.",
                "operationId": "registerUserWithBusiness",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "user": {
                                        "properties": {
                                            "title": {
                                                "type": "string",
                                                "example": "Mr"
                                            },
                                            "first_name": {
                                                "type": "string",
                                                "example": "John"
                                            },
                                            "last_name": {
                                                "type": "string",
                                                "example": "Doe"
                                            },
                                            "email": {
                                                "type": "string",
                                                "format": "email",
                                                "example": "mdronymia040@gmail.com"
                                            },
                                            "password": {
                                                "type": "string",
                                                "format": "password",
                                                "example": "12345678@We"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "business": {
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "example": "Learning Hub"
                                            },
                                            "email": {
                                                "type": "string",
                                                "format": "email",
                                                "example": "mdronymia040@gmail.com"
                                            },
                                            "phone": {
                                                "type": "string",
                                                "example": "+8801XXXXXXXXX"
                                            },
                                            "registration_date": {
                                                "type": "string",
                                                "format": "date",
                                                "example": "01-01-2010"
                                            },
                                            "about": {
                                                "type": "string",
                                                "example": "About the business..."
                                            },
                                            "web_page": {
                                                "type": "string",
                                                "example": "https://example.com"
                                            },
                                            "address_line_1": {
                                                "type": "string",
                                                "example": "123 Example St"
                                            },
                                            "country": {
                                                "type": "string",
                                                "example": "Bangladesh"
                                            },
                                            "city": {
                                                "type": "string",
                                                "example": "Dhaka"
                                            },
                                            "postcode": {
                                                "type": "string",
                                                "example": "1207"
                                            },
                                            "currency": {
                                                "type": "string",
                                                "example": "BDT"
                                            },
                                            "logo": {
                                                "type": "string",
                                                "example": "logos/acme.png"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User and business created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Business registered successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 10
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "john@example.com"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "business": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 5
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Acme Ltd"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have permission to perform this action."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "user.email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The user.email has already been taken."
                                                    }
                                                },
                                                "business.name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The business.name field is required."
                                                    }
                                                },
                                                "business.registration_date": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The business.registration_date must be a valid date."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/businesses": {
            "get": {
                "tags": [
                    "business_management"
                ],
                "summary": "Get list of all businesses (role: Super Admin only)",
                "operationId": "getAllBusinesses",
                "responses": {
                    "200": {
                        "description": "Businesses fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Businesses fetched successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Tech Corp Ltd"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "example": "info@techcorp.com"
                                                    },
                                                    "phone": {
                                                        "type": "string",
                                                        "example": "+880123456789"
                                                    },
                                                    "registration_date": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "example": "2025-09-22"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "active"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-09-22T12:00:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid request."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have permission to perform this action."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong on the server."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "business_management"
                ],
                "summary": "Update an existing business (role: Super Admin only)",
                "operationId": "updateBusiness",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "user": {
                                        "required": [
                                            "id",
                                            "first_name",
                                            "last_Name",
                                            "email"
                                        ],
                                        "properties": {
                                            "id": {
                                                "description": "User ID (must exist in users table)",
                                                "type": "integer",
                                                "example": 5
                                            },
                                            "first_name": {
                                                "description": "User first name",
                                                "type": "string",
                                                "example": "John"
                                            },
                                            "last_Name": {
                                                "description": "User last name",
                                                "type": "string",
                                                "example": "Doe"
                                            },
                                            "email": {
                                                "description": "User email",
                                                "type": "string",
                                                "example": "admin@yopmail.com"
                                            },
                                            "password": {
                                                "description": "Optional user password (min 6 chars)",
                                                "type": "string",
                                                "example": "secret123"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "business": {
                                        "required": [
                                            "id",
                                            "name",
                                            "country",
                                            "city",
                                            "address_line_1"
                                        ],
                                        "properties": {
                                            "id": {
                                                "description": "Business ID (must exist in businesses table)",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "description": "Business name",
                                                "type": "string",
                                                "example": "Acme Corporation"
                                            },
                                            "about": {
                                                "description": "About the business",
                                                "type": "string",
                                                "example": "We provide tech solutions worldwide."
                                            },
                                            "web_page": {
                                                "description": "Website URL",
                                                "type": "string",
                                                "example": "https://acme.com"
                                            },
                                            "pin_code": {
                                                "description": "Optional pin code",
                                                "type": "string",
                                                "example": "1207"
                                            },
                                            "phone": {
                                                "description": "Business phone number",
                                                "type": "string",
                                                "example": "+8801765432109"
                                            },
                                            "email": {
                                                "description": "Business email",
                                                "type": "string",
                                                "example": "contact@acme.com"
                                            },
                                            "additional_information": {
                                                "description": "Additional info",
                                                "type": "string",
                                                "example": "24/7 support available"
                                            },
                                            "lat": {
                                                "description": "Latitude",
                                                "type": "string",
                                                "example": "23.7808875"
                                            },
                                            "long": {
                                                "description": "Longitude",
                                                "type": "string",
                                                "example": "90.2792371"
                                            },
                                            "currency": {
                                                "description": "Currency code",
                                                "type": "string",
                                                "example": "BDT"
                                            },
                                            "country": {
                                                "description": "Country name",
                                                "type": "string",
                                                "example": "Bangladesh"
                                            },
                                            "city": {
                                                "description": "City name",
                                                "type": "string",
                                                "example": "Dhaka"
                                            },
                                            "postcode": {
                                                "description": "Postal code",
                                                "type": "string",
                                                "example": "1207"
                                            },
                                            "address_line_1": {
                                                "description": "Primary address line",
                                                "type": "string",
                                                "example": "123 Business Street"
                                            },
                                            "address_line_2": {
                                                "description": "Secondary address line",
                                                "type": "string",
                                                "example": "2nd Floor, Suite 5"
                                            },
                                            "logo": {
                                                "description": "Logo URL",
                                                "type": "string",
                                                "example": "https://cdn.acme.com/logo.png"
                                            },
                                            "image": {
                                                "description": "Image URL",
                                                "type": "string",
                                                "example": "https://cdn.acme.com/cover.jpg"
                                            },
                                            "background_image": {
                                                "description": "Background image URL",
                                                "type": "string",
                                                "example": "https://cdn.acme.com/bg.jpg"
                                            },
                                            "theme": {
                                                "description": "Business theme",
                                                "type": "string",
                                                "example": "dark"
                                            },
                                            "images": {
                                                "description": "Optional image list",
                                                "type": "array",
                                                "items": {
                                                    "type": "string",
                                                    "example": "https://cdn.acme.com/gallery/img1.jpg"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Business updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Business updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Acme Corporation"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "contact@acme.com"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "+8801765432109"
                                                },
                                                "country": {
                                                    "type": "string",
                                                    "example": "Bangladesh"
                                                },
                                                "city": {
                                                    "type": "string",
                                                    "example": "Dhaka"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "active"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-09-22T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-09-22T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid request."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have permission to perform this action."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The name field is required."
                                        },
                                        "errors": {
                                            "properties": {
                                                "user.id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The user ID field is required."
                                                    }
                                                },
                                                "user.first_name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The user.first name field is required."
                                                    }
                                                },
                                                "user.last_Name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The last name field is required."
                                                    }
                                                },
                                                "user.email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email field is required."
                                                    }
                                                },
                                                "business.id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The business ID field is required."
                                                    }
                                                },
                                                "business.name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The name field is required."
                                                    }
                                                },
                                                "business.country": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The country field is required."
                                                    }
                                                },
                                                "business.city": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The city field is required."
                                                    }
                                                },
                                                "business.address_line_1": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The address line 1 field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/businesses/{id}": {
            "get": {
                "tags": [
                    "business_management"
                ],
                "summary": "Get a single business by ID (role: Super Admin only)",
                "operationId": "getBusinessById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Business ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Business fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Business fetched successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Tech Corp Ltd"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "info@techcorp.com"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "+880123456789"
                                                },
                                                "registration_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2025-09-22"
                                                },
                                                "country": {
                                                    "type": "string",
                                                    "example": "Bangladesh"
                                                },
                                                "city": {
                                                    "type": "string",
                                                    "example": "Dhaka"
                                                },
                                                "postcode": {
                                                    "type": "string",
                                                    "example": "1207"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "active"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-09-22T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-09-22T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid request."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have permission to perform this action."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Business not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Business not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong on the server."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/businesses/{ids}": {
            "delete": {
                "tags": [
                    "business_management"
                ],
                "summary": "Delete Businesses (role: Super Admin only)",
                "operationId": "deleteBusiness",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "path",
                        "description": "Business ID (comma-separated for multiple)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "1,2,3"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Business deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Business deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Business not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Lesson not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/certificate-template": {
            "get": {
                "tags": [
                    "Certificates"
                ],
                "summary": "Get the currently active certificate template (role: Admin only)",
                "operationId": "getCertificateTemplate",
                "responses": {
                    "200": {
                        "description": "Active certificate template retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Default Certificate Template"
                                                },
                                                "html_content": {
                                                    "type": "string",
                                                    "example": "<div>...</div>"
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No active certificate template found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No active certificate template found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/certificate-template/{id}": {
            "get": {
                "tags": [
                    "Certificates"
                ],
                "summary": "Get the currently active certificate template (role: Admin only)",
                "operationId": "getCertificateTemplateById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Certificate ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Active certificate template retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Default Certificate Template"
                                                },
                                                "html_content": {
                                                    "type": "string",
                                                    "example": "<div>...</div>"
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No active certificate template found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No active certificate template found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Certificates"
                ],
                "summary": "Update an existing certificate template (role: Admin only)",
                "operationId": "updateCertificateTemplate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Certificate Template ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Certificate Template"
                                    },
                                    "html_content": {
                                        "type": "string",
                                        "example": "<div>Updated HTML</div>"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Certificate template updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Certificate template updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Updated Certificate Template"
                                                },
                                                "html_content": {
                                                    "type": "string",
                                                    "example": "<div>Updated HTML</div>"
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Template not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Template not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/certificates/generate-dynamic": {
            "put": {
                "tags": [
                    "Certificates"
                ],
                "summary": "Generate a professional dynamic certificate PDF (no saving) (role: Any Role)",
                "operationId": "generateDynamicCertificate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "course_id"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "course_id": {
                                        "type": "integer",
                                        "example": 101
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns a generated certificate PDF",
                        "content": {
                            "application/pdf": {}
                        }
                    },
                    "400": {
                        "description": "Course not completed yet or no template found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Course not completed yet."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/client/course-categories": {
            "get": {
                "tags": [
                    "course_management.course_category"
                ],
                "summary": "Get all course categories (role: Student only)",
                "description": "Retrieve a paginated list of course categories.",
                "operationId": "getCourseCategoryClient",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of course categories",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "total": {
                                            "type": "integer",
                                            "example": 50
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Web Development"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-09-18T12:00:00Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-09-18T12:00:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized access"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have permission to access this resource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No categories found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No course categories found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid query parameters"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/course-categories": {
            "get": {
                "tags": [
                    "course_management.course_category"
                ],
                "summary": "Get all course categories (role: Admin only)",
                "description": "Retrieve a paginated list of course categories.",
                "operationId": "getCourseCategory",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of course categories",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "total": {
                                            "type": "integer",
                                            "example": 50
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Web Development"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-09-18T12:00:00Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-09-18T12:00:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized access"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have permission to access this resource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No categories found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No course categories found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid query parameters"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "course_management.course_category"
                ],
                "summary": "Update a course category (role: Admin only)",
                "operationId": "updateCourseCategory",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "parent_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Data Science"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "description"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Course category updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "parent_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Data Science"
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "description"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-09-18T12:00:00Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized access"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden: Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have permission to update this course category"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Course category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Course category not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict: Course category already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "A course category with this name already exists"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The name field is required."
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The name field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "course_management.course_category"
                ],
                "summary": "Create a new course category (role: Admin only)",
                "operationId": "createCourseCategory",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Data Science"
                                    },
                                    "parent_id": {
                                        "type": "integer",
                                        "example": ""
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "description"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Course category created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Data Science"
                                        },
                                        "parent_id": {
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "description"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-09-18T12:00:00Z"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-09-18T12:00:00Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized access"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden: Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have permission to create a course category"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Requested resource not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict: Course category already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "A course category with this name already exists"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The name field is required."
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The name field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/course-categories/{id}": {
            "get": {
                "tags": [
                    "course_management.course_category"
                ],
                "summary": "Get a single course category by ID (role: Admin only)",
                "operationId": "getCourseCategoryById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Course Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Course Category retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Web Development"
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "description"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-09-18T12:00:00Z"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-09-18T12:00:00Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized access"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden: Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have permission to view this course category"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Course Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Course Category not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict: Resource conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Conflict occurred while retrieving this resource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/course-categories/{ids}": {
            "delete": {
                "tags": [
                    "course_management.course_category"
                ],
                "summary": "Delete a course category (role: Admin only)",
                "operationId": "deleteCourseCategory",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "path",
                        "description": "Course Category ID (comma-separated for multiple)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "1,2,3"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Course category deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Course category deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Some data not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Some data not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Course category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Course category not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/client/courses/{id}": {
            "get": {
                "tags": [
                    "course_management.course"
                ],
                "summary": "Get a course by ID (Public or Authenticated)",
                "description": "For guests, shows limited info. For authenticated students enrolled in the course, shows full details.",
                "operationId": "getCourseByIdUnified",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Course ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Course retrieved successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/client/courses": {
            "get": {
                "tags": [
                    "course_management.course"
                ],
                "summary": "Get all courses (Public and Authenticated users)",
                "description": "Retrieve all courses. If user is logged in, filter by enrolled status or show personalized data.",
                "operationId": "getCoursesClientUnified",
                "parameters": [
                    {
                        "name": "searchKey",
                        "in": "query",
                        "description": "Search by course title (case-insensitive, partial match)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Laravel"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by course status. Allowed values: draft, published, archived.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "published"
                        }
                    },
                    {
                        "name": "is_enrolled",
                        "in": "query",
                        "description": "Filter by enrollment status: 1 for enrolled, 0 for not enrolled.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "is_featured",
                        "in": "query",
                        "description": "Filter by is featured: 1 for featured, 0 for not non featured.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "category_ids",
                        "in": "query",
                        "description": "Filter by one or more category IDs (comma-separated). Example: 1,3,5",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2,5,8"
                        }
                    },
                    {
                        "name": "level",
                        "in": "query",
                        "description": "Filter by course level (e.g., beginner, intermediate, advanced).",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "beginner"
                        }
                    },
                    {
                        "name": "price_range",
                        "in": "query",
                        "description": "Filter courses by price range. Comma-separated values where the first value is min and the second is max. Example: 100,500 — start or end can be empty like ',500' or '100,'.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "100,500"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of results per page.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of courses"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "trashed/v1.0/client/courses": {
            "get": {
                "tags": [
                    "Trash"
                ],
                "summary": "Get all courses (Public - No authentication required) (role: Student only)",
                "description": "Retrieve all courses for non-logged in users. Never use for logged in users.",
                "operationId": "getCoursesClient",
                "parameters": [
                    {
                        "name": "searchKey",
                        "in": "query",
                        "description": "Search by course title (case-insensitive, partial match)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Laravel"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by course status. Allowed values: draft, published, archived.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "published"
                        }
                    },
                    {
                        "name": "is_enrolled",
                        "in": "query",
                        "description": "Filter by enrollment status: 1 for enrolled, 0 for not enrolled.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "is_featured",
                        "in": "query",
                        "description": "Filter by is featured: 1 for featured, 0 for not non featured.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "category_ids",
                        "in": "query",
                        "description": "Filter by one or more category IDs (comma-separated). Example: 1,3,5",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2,5,8"
                        }
                    },
                    {
                        "name": "level",
                        "in": "query",
                        "description": "Filter by course level (e.g., beginner, intermediate, advanced).",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "beginner"
                        }
                    },
                    {
                        "name": "price_range",
                        "in": "query",
                        "description": "Filter courses by price range. Comma-separated values where the first value is min and the second is max. Example: 100,500 — start or end can be empty like ',500' or '100,'.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "100,500"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of results per page.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of courses",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Courses retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "Laravel Basics"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Learn Laravel framework"
                                                    },
                                                    "price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 49.99
                                                    },
                                                    "category_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-09-19T12:00:00Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-09-19T12:00:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid query parameters"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have permission to access this resource."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "trashed/v1.0/client/courses/{id}": {
            "get": {
                "tags": [
                    "Trash"
                ],
                "summary": "Get a single course by ID (Public or Non-enrolled users) (role: Student only)",
                "description": "Retrieve a course by its ID for non-logged in users OR for logged-in users viewing a non-enrolled course",
                "operationId": "getCourseByIdClient",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Course ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Course details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Course retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Introduction to Programming"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "A beginner course on programming"
                                                },
                                                "lessons": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "title": {
                                                                "type": "string",
                                                                "example": "Lesson 1"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "faqs": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "question": {
                                                                "type": "string",
                                                                "example": "What is a variable?"
                                                            },
                                                            "answer": {
                                                                "type": "string",
                                                                "example": "A variable is..."
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "notices": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "title": {
                                                                "type": "string",
                                                                "example": "Exam Notice"
                                                            },
                                                            "description": {
                                                                "type": "string",
                                                                "example": "Exam will be held on..."
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Course not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Course not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/client/courses/secure/{id}": {
            "get": {
                "tags": [
                    "Trash"
                ],
                "summary": "Get enrolled course details (Authenticated and enrolled users only) (role: Student only)",
                "description": "Retrieve detailed course information including lessons, quizzes, and progress.\r\n *     Authenticated and enrolled users only",
                "operationId": "getCourseByIdSecureClient",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Course ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Course details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Course retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Introduction to Programming"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "A beginner course on programming"
                                                },
                                                "lessons": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "title": {
                                                                "type": "string",
                                                                "example": "Lesson 1"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "faqs": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "question": {
                                                                "type": "string",
                                                                "example": "What is a variable?"
                                                            },
                                                            "answer": {
                                                                "type": "string",
                                                                "example": "A variable is..."
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "notices": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "title": {
                                                                "type": "string",
                                                                "example": "Exam Notice"
                                                            },
                                                            "description": {
                                                                "type": "string",
                                                                "example": "Exam will be held on..."
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Course not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Course not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/client/courses/secure": {
            "get": {
                "tags": [
                    "Trash"
                ],
                "summary": "Get all courses (Authenticated users only) (role: Student only)",
                "description": "Retrieve courses for logged-in users only.",
                "operationId": "getCoursesClientSecure",
                "parameters": [
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "Filter by category ID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": ""
                        }
                    },
                    {
                        "name": "is_enrolled",
                        "in": "query",
                        "description": "Filter by enrollment status: 1 for enrolled, 0 for not enrolled",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "",
                            "example": ""
                        }
                    },
                    {
                        "name": "is_featured",
                        "in": "query",
                        "description": "Filter by is featured: 1 for featured, 0 for not non featured.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "searchKey",
                        "in": "query",
                        "description": "Search by keyword in title only",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": "",
                            "example": ""
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": "",
                            "example": ""
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Course status only: draft, published, archived",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of courses",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Courses retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "Laravel Basics"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Learn Laravel framework"
                                                    },
                                                    "price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 49.99
                                                    },
                                                    "category_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-09-19T12:00:00Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-09-19T12:00:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid query parameters"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have permission to access this resource."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/courses": {
            "get": {
                "tags": [
                    "course_management.course"
                ],
                "summary": "Get all courses (role: Admin only)",
                "operationId": "getCourses",
                "parameters": [
                    {
                        "name": "searchKey",
                        "in": "query",
                        "description": "Search by course title (case-insensitive, partial match)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Laravel"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by course status. Allowed values: draft, published, archived.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "published"
                        }
                    },
                    {
                        "name": "is_enrolled",
                        "in": "query",
                        "description": "Filter by enrollment status: 1 for enrolled, 0 for not enrolled.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "is_featured",
                        "in": "query",
                        "description": "Filter by is featured: 1 for featured, 0 for not non featured.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "category_ids",
                        "in": "query",
                        "description": "Filter by one or more category IDs (comma-separated). Example: 1,3,5",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2,5,8"
                        }
                    },
                    {
                        "name": "level",
                        "in": "query",
                        "description": "Filter by course level (e.g., beginner, intermediate, advanced).",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "beginner"
                        }
                    },
                    {
                        "name": "price_range",
                        "in": "query",
                        "description": "Filter courses by price range. Comma-separated values where the first value is min and the second is max. Example: 100,500 — start or end can be empty like ',500' or '100,'.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "100,500"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of results per page.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of courses",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Courses retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "Laravel Basics"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Learn Laravel framework"
                                                    },
                                                    "price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 49.99
                                                    },
                                                    "category_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-09-19T12:00:00Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-09-19T12:00:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid query parameters"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have permission to access this resource."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "course_management.course"
                ],
                "summary": "Update a course (role: Admin only)",
                "operationId": "updateCourse",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "title",
                                    "category_id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "title": {
                                        "type": "string",
                                        "example": "Laravel Basics"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "A complete Laravel course"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 49.99
                                    },
                                    "sale_price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 29.99
                                    },
                                    "price_start_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-10-01"
                                    },
                                    "price_end_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-12-31"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "draft",
                                            "published",
                                            "archived"
                                        ],
                                        "example": "draft"
                                    },
                                    "status_start_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-10-01"
                                    },
                                    "status_end_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-12-31"
                                    },
                                    "url": {
                                        "type": "string",
                                        "example": "https://example.com/laravel-basics"
                                    },
                                    "level": {
                                        "type": "string",
                                        "example": "Beginner"
                                    },
                                    "cover": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "preview_video_source_type": {
                                        "type": "string",
                                        "enum": [
                                            "HTML",
                                            "YouTube",
                                            "Vimeo",
                                            "External Link",
                                            "Embed"
                                        ],
                                        "example": "YouTube"
                                    },
                                    "preview_video_url": {
                                        "type": "string",
                                        "example": "https://youtu.be/example"
                                    },
                                    "preview_video_poster": {
                                        "type": "string",
                                        "example": "poster.jpg"
                                    },
                                    "preview_video_embed": {
                                        "type": "string",
                                        "example": "<iframe src='https://example.com/embed'></iframe>"
                                    },
                                    "duration": {
                                        "type": "string",
                                        "example": "8 hours"
                                    },
                                    "video_duration": {
                                        "type": "string",
                                        "example": "2 hours"
                                    },
                                    "course_preview_description": {
                                        "type": "string",
                                        "example": "This is a preview of the Laravel Basics course."
                                    },
                                    "is_featured": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "is_lock_lessons_in_order": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "created_by": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "category_ids": {
                                        "description": "Array of category IDs for this course",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Course updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Laravel Basics"
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "A complete Laravel course"
                                        },
                                        "price": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 49.99
                                        },
                                        "sale_price": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 29.99
                                        },
                                        "price_start_date": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2025-10-01"
                                        },
                                        "price_end_date": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2025-12-31"
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "draft",
                                                "published",
                                                "archived"
                                            ],
                                            "example": "draft"
                                        },
                                        "status_start_date": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2025-10-01"
                                        },
                                        "status_end_date": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2025-12-31"
                                        },
                                        "url": {
                                            "type": "string",
                                            "example": "https://example.com/laravel-basics"
                                        },
                                        "level": {
                                            "type": "string",
                                            "example": "Beginner"
                                        },
                                        "cover": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "preview_video_source_type": {
                                            "type": "string",
                                            "enum": [
                                                "HTML",
                                                "YouTube",
                                                "Vimeo",
                                                "External Link",
                                                "Embed"
                                            ],
                                            "example": "YouTube"
                                        },
                                        "preview_video_url": {
                                            "type": "string",
                                            "example": "https://youtu.be/example"
                                        },
                                        "preview_video_poster": {
                                            "type": "string",
                                            "example": "poster.jpg"
                                        },
                                        "preview_video_embed": {
                                            "type": "string",
                                            "example": "<iframe src='https://example.com/embed'></iframe>"
                                        },
                                        "duration": {
                                            "type": "string",
                                            "example": "8 hours"
                                        },
                                        "video_duration": {
                                            "type": "string",
                                            "example": "2 hours"
                                        },
                                        "course_preview_description": {
                                            "type": "string",
                                            "example": "This is a preview of the Laravel Basics course."
                                        },
                                        "is_featured": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "is_lock_lessons_in_order": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "created_by": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "category_ids": {
                                            "description": "Array of category IDs for this course",
                                            "type": "array",
                                            "items": {
                                                "type": "integer",
                                                "example": 1
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have permission to perform this action."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Course not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Course not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "A course with this title already exists."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The title field is required."
                                        },
                                        "errors": {
                                            "properties": {
                                                "title": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The title field is required."
                                                    }
                                                },
                                                "description": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The description field is required."
                                                    }
                                                },
                                                "category_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The category id field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "course_management.course"
                ],
                "summary": "Create a new course (role: Admin only)",
                "operationId": "createCourse",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "category_id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "title": {
                                        "type": "string",
                                        "example": "Laravel Basics"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "A complete Laravel course"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 49.99
                                    },
                                    "sale_price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 29.99
                                    },
                                    "price_start_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-10-01"
                                    },
                                    "price_end_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-12-31"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "draft",
                                            "published",
                                            "archived"
                                        ],
                                        "example": "draft"
                                    },
                                    "status_start_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-10-01"
                                    },
                                    "status_end_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-12-31"
                                    },
                                    "url": {
                                        "type": "string",
                                        "example": "https://example.com/laravel-basics"
                                    },
                                    "level": {
                                        "type": "string",
                                        "example": "Beginner"
                                    },
                                    "cover": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "preview_video_source_type": {
                                        "type": "string",
                                        "enum": [
                                            "HTML",
                                            "YouTube",
                                            "Vimeo",
                                            "External Link",
                                            "Embed"
                                        ],
                                        "example": "YouTube"
                                    },
                                    "preview_video_url": {
                                        "type": "string",
                                        "example": "https://youtu.be/example"
                                    },
                                    "preview_video_poster": {
                                        "type": "string",
                                        "example": "poster.jpg"
                                    },
                                    "preview_video_embed": {
                                        "type": "string",
                                        "example": "<iframe src='https://example.com/embed'></iframe>"
                                    },
                                    "duration": {
                                        "type": "string",
                                        "example": "8 hours"
                                    },
                                    "video_duration": {
                                        "type": "string",
                                        "example": "2 hours"
                                    },
                                    "course_preview_description": {
                                        "type": "string",
                                        "example": "This is a preview of the Laravel Basics course."
                                    },
                                    "is_featured": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "is_lock_lessons_in_order": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "created_by": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "category_ids": {
                                        "description": "Array of category IDs for this course",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Course created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Laravel Basics"
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "Learn Laravel framework"
                                        },
                                        "price": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 49.99
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "draft"
                                        },
                                        "category_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "created_by": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-09-18T12:00:00Z"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-09-18T12:00:00Z"
                                        },
                                        "category_ids": {
                                            "description": "Array of category IDs for this course",
                                            "type": "array",
                                            "items": {
                                                "type": "integer",
                                                "example": 1
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have permission to perform this action."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "A course with this title already exists."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The title field is required."
                                        },
                                        "errors": {
                                            "properties": {
                                                "title": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The title field is required."
                                                    }
                                                },
                                                "description": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The description field is required."
                                                    }
                                                },
                                                "category_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The category id field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "course_management.course"
                ],
                "summary": "Update a course (role: Admin only)",
                "operationId": "updatePartialCourse",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "title": {
                                        "type": "string",
                                        "example": "Laravel Basics"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "A complete Laravel course"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 49.99
                                    },
                                    "sale_price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 29.99
                                    },
                                    "price_start_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-10-01"
                                    },
                                    "price_end_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-12-31"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "draft",
                                            "published",
                                            "archived"
                                        ],
                                        "example": "draft"
                                    },
                                    "status_start_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-10-01"
                                    },
                                    "status_end_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-12-31"
                                    },
                                    "url": {
                                        "type": "string",
                                        "example": "https://example.com/laravel-basics"
                                    },
                                    "level": {
                                        "type": "string",
                                        "example": "Beginner"
                                    },
                                    "cover": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "preview_video_source_type": {
                                        "type": "string",
                                        "enum": [
                                            "HTML",
                                            "YouTube",
                                            "Vimeo",
                                            "External Link",
                                            "Embed"
                                        ],
                                        "example": "YouTube"
                                    },
                                    "preview_video_url": {
                                        "type": "string",
                                        "example": "https://youtu.be/example"
                                    },
                                    "preview_video_poster": {
                                        "type": "string",
                                        "example": "poster.jpg"
                                    },
                                    "preview_video_embed": {
                                        "type": "string",
                                        "example": "<iframe src='https://example.com/embed'></iframe>"
                                    },
                                    "duration": {
                                        "type": "string",
                                        "example": "8 hours"
                                    },
                                    "video_duration": {
                                        "type": "string",
                                        "example": "2 hours"
                                    },
                                    "course_preview_description": {
                                        "type": "string",
                                        "example": "This is a preview of the Laravel Basics course."
                                    },
                                    "is_featured": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "is_lock_lessons_in_order": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "created_by": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "category_ids": {
                                        "description": "Array of category IDs for this course",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Course updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Laravel Basics"
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "A complete Laravel course"
                                        },
                                        "price": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 49.99
                                        },
                                        "sale_price": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 29.99
                                        },
                                        "price_start_date": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2025-10-01"
                                        },
                                        "price_end_date": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2025-12-31"
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "draft",
                                                "published",
                                                "archived"
                                            ],
                                            "example": "draft"
                                        },
                                        "status_start_date": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2025-10-01"
                                        },
                                        "status_end_date": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2025-12-31"
                                        },
                                        "url": {
                                            "type": "string",
                                            "example": "https://example.com/laravel-basics"
                                        },
                                        "level": {
                                            "type": "string",
                                            "example": "Beginner"
                                        },
                                        "cover": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "preview_video_source_type": {
                                            "type": "string",
                                            "enum": [
                                                "HTML",
                                                "YouTube",
                                                "Vimeo",
                                                "External Link",
                                                "Embed"
                                            ],
                                            "example": "YouTube"
                                        },
                                        "preview_video_url": {
                                            "type": "string",
                                            "example": "https://youtu.be/example"
                                        },
                                        "preview_video_poster": {
                                            "type": "string",
                                            "example": "poster.jpg"
                                        },
                                        "preview_video_embed": {
                                            "type": "string",
                                            "example": "<iframe src='https://example.com/embed'></iframe>"
                                        },
                                        "duration": {
                                            "type": "string",
                                            "example": "8 hours"
                                        },
                                        "video_duration": {
                                            "type": "string",
                                            "example": "2 hours"
                                        },
                                        "course_preview_description": {
                                            "type": "string",
                                            "example": "This is a preview of the Laravel Basics course."
                                        },
                                        "is_featured": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "is_lock_lessons_in_order": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "created_by": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "category_ids": {
                                            "description": "Array of category IDs for this course",
                                            "type": "array",
                                            "items": {
                                                "type": "integer",
                                                "example": 1
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have permission to perform this action."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Course not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Course not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "A course with this title already exists."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The title field is required."
                                        },
                                        "errors": {
                                            "properties": {
                                                "title": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The title field is required."
                                                    }
                                                },
                                                "description": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The description field is required."
                                                    }
                                                },
                                                "category_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The category id field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/courses/{id}": {
            "get": {
                "tags": [
                    "course_management.course"
                ],
                "summary": "Get a single course by ID (role: Admin only)",
                "description": "Retrieve a course by its ID along with lessons, FAQs, and notices",
                "operationId": "getCourseById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Course ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Course details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Course retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Introduction to Programming"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "A beginner course on programming"
                                                },
                                                "lessons": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "title": {
                                                                "type": "string",
                                                                "example": "Lesson 1"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "faqs": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "question": {
                                                                "type": "string",
                                                                "example": "What is a variable?"
                                                            },
                                                            "answer": {
                                                                "type": "string",
                                                                "example": "A variable is..."
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "notices": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "title": {
                                                                "type": "string",
                                                                "example": "Exam Notice"
                                                            },
                                                            "description": {
                                                                "type": "string",
                                                                "example": "Exam will be held on..."
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Course not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Course not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/courses/status": {
            "put": {
                "tags": [
                    "course_management.course"
                ],
                "summary": "Update only the status of a course (role: Admin/Lecturer only)",
                "operationId": "updateCourseStatus",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "status"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "draft",
                                            "published",
                                            "archived"
                                        ],
                                        "example": "published"
                                    },
                                    "status_start_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-11-01"
                                    },
                                    "status_end_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-12-31"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Course status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Course status updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "published"
                                                },
                                                "status_start_date": {
                                                    "type": "string",
                                                    "example": "2025-11-01"
                                                },
                                                "status_end_date": {
                                                    "type": "string",
                                                    "example": "2025-12-31"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Course not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Course not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You can not perform this action"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The status field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/courses/{ids}": {
            "delete": {
                "tags": [
                    "course_management.course"
                ],
                "summary": "Delete course (role: Admin only)",
                "operationId": "deleteCourse",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "path",
                        "description": "Course ID (comma-separated for multiple)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "1,2,3"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Course deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Course deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Some data not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Some data not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Course not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Course not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/course-faqs": {
            "put": {
                "tags": [
                    "course_management.course_faq"
                ],
                "summary": "Add or update FAQs for a course (role: Admin only)",
                "operationId": "updateCourseFaqs",
                "requestBody": {
                    "description": "Array of FAQs to add or update for a specific course",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "course_id",
                                    "faqs"
                                ],
                                "properties": {
                                    "course_id": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "faqs": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "question",
                                                "answer"
                                            ],
                                            "properties": {
                                                "id": {
                                                    "description": "Optional for existing FAQ updates",
                                                    "type": "integer",
                                                    "example": 1,
                                                    "nullable": true
                                                },
                                                "question": {
                                                    "type": "string",
                                                    "example": "What is this course about?"
                                                },
                                                "answer": {
                                                    "type": "string",
                                                    "example": "This course covers Laravel basics and advanced concepts."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "FAQs updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Course FAQs updated successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "question": {
                                                        "type": "string",
                                                        "example": "What is this course about?"
                                                    },
                                                    "answer": {
                                                        "type": "string",
                                                        "example": "This course covers Laravel basics."
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Course not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/course-faqs/{course_id}": {
            "get": {
                "tags": [
                    "course_management.course_faq"
                ],
                "summary": "Get all FAQs for a specific course (role: Any Role)",
                "operationId": "getCourseFaqs",
                "parameters": [
                    {
                        "name": "course_id",
                        "in": "path",
                        "description": "The ID of the course to retrieve FAQs for",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "FAQs retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Course FAQs retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "question": {
                                                        "type": "string",
                                                        "example": "What will I learn?"
                                                    },
                                                    "answer": {
                                                        "type": "string",
                                                        "example": "You will learn Laravel, PHP, and database integration."
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Course not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/courses/{id}/reviews": {
            "get": {
                "tags": [
                    "CourseReviews"
                ],
                "summary": "Get all approved reviews for a course (role: Any Role)",
                "operationId": "getCourseReviews",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Course ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of approved reviews",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Reviews retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "review_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "rating": {
                                                        "type": "integer",
                                                        "example": 5
                                                    },
                                                    "comment": {
                                                        "type": "string",
                                                        "example": "Great course!"
                                                    },
                                                    "user_name": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "example": "2025-09-16 12:00:00"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Bad request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have permission to access this resource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Course not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Course not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "CourseReviews"
                ],
                "summary": "Submit a review for a course (role: Any Role)",
                "operationId": "submitCourseReview",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Course ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "rating",
                                    "comment"
                                ],
                                "properties": {
                                    "rating": {
                                        "type": "integer",
                                        "maximum": 5,
                                        "minimum": 1,
                                        "example": 5
                                    },
                                    "comment": {
                                        "type": "string",
                                        "example": "Excellent course!"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Review submitted for moderation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Review submitted for moderation."
                                        },
                                        "data": {
                                            "properties": {
                                                "review_id": {
                                                    "type": "integer",
                                                    "example": 10
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Bad request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have permission to access this resource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Course not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Course not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The rating field is required."
                                        },
                                        "errors": {
                                            "properties": {
                                                "rating": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The rating field is required."
                                                    }
                                                },
                                                "comment": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The comment field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/dashboard": {
            "get": {
                "tags": [
                    "Dashboard"
                ],
                "summary": "Get dashboard metrics and trends",
                "description": "Fetches all KPI metrics, revenue & enrollment trends, course completion rates, weekly enrollment trends, and recent student activities for the LMS dashboard.",
                "operationId": "getDashboardData",
                "responses": {
                    "200": {
                        "description": "Dashboard data retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "kpi": {
                                            "properties": {
                                                "total_revenue": {
                                                    "type": "number",
                                                    "example": 124560
                                                },
                                                "active_students": {
                                                    "type": "integer",
                                                    "example": 2847
                                                },
                                                "enrollment_rate": {
                                                    "type": "number",
                                                    "example": 89.2
                                                },
                                                "completion_rate": {
                                                    "type": "number",
                                                    "example": 76.8
                                                },
                                                "avg_learning_hours": {
                                                    "type": "number",
                                                    "example": 4.2
                                                },
                                                "audience_reach": {
                                                    "type": "number",
                                                    "example": 67.3
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "revenue_enrollment_trends": {
                                            "properties": {
                                                "months": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "revenue": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "number"
                                                    }
                                                },
                                                "enrollment": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "integer"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "course_completion_rates": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "completion_rate": {
                                                        "type": "number"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "weekly_enrollment_trends": {
                                            "properties": {
                                                "weeks": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "enrollments": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "completions": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "integer"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "recent_activities": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "user": {
                                                        "type": "string"
                                                    },
                                                    "action": {
                                                        "type": "string"
                                                    },
                                                    "course": {
                                                        "type": "string"
                                                    },
                                                    "time": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/enrollments": {
            "post": {
                "tags": [
                    "Enrollments"
                ],
                "summary": "Enroll authenticated user in a course (role: Student only)",
                "operationId": "createEnrollment",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "course_id"
                                ],
                                "properties": {
                                    "course_id": {
                                        "type": "integer",
                                        "example": 101
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Enrollment successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "user_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "course_id": {
                                            "type": "integer",
                                            "example": 101
                                        },
                                        "enrolled_at": {
                                            "type": "string",
                                            "example": "2025-09-16 12:00:00"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid request payload."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have permission to enroll in this course."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Course not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Course not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Already enrolled",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User is already enrolled in this course."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The course_id field is required."
                                        },
                                        "errors": {
                                            "properties": {
                                                "course_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The course_id field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred while processing the enrollment."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/users/{id}/enrollments": {
            "get": {
                "tags": [
                    "Enrollments"
                ],
                "summary": "Get all enrollments of a specific user (role: Student only)",
                "operationId": "7901015da31510d160b64161e01f50cb",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of user enrollments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User enrollments retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "enrollment_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "course": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 101
                                                            },
                                                            "title": {
                                                                "type": "string",
                                                                "example": "Laravel Basics"
                                                            },
                                                            "description": {
                                                                "type": "string",
                                                                "example": "Learn Laravel framework"
                                                            },
                                                            "price": {
                                                                "type": "number",
                                                                "example": 49.99
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "progress": {
                                                        "type": "integer",
                                                        "example": 100
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "completed"
                                                    },
                                                    "enrolled_at": {
                                                        "type": "string",
                                                        "example": "2025-09-16 12:00:00"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input"
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required"
                    },
                    "403": {
                        "description": "Forbidden - User does not have access"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/lessons": {
            "get": {
                "tags": [
                    "Lessons"
                ],
                "summary": "Get all lessons (role: Admin only)",
                "operationId": "getLessons",
                "parameters": [
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "Filter by category ID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": ""
                        }
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "Search by keyword in title or description",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": "",
                            "example": ""
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": "",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of courses",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Courses retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "Laravel Basics"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Learn Laravel framework"
                                                    },
                                                    "price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 49.99
                                                    },
                                                    "category_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-09-19T12:00:00Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-09-19T12:00:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid query parameters"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have permission to access this resource."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Lessons"
                ],
                "summary": "Update an existing lesson (role: Admin only)",
                "operationId": "f0193a141881c250c4879a0cead36e7c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "title",
                                    "content_type"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "title": {
                                        "type": "string",
                                        "example": "Updated Lesson Title"
                                    },
                                    "content_type": {
                                        "type": "string",
                                        "enum": [
                                            "video",
                                            "text",
                                            "file",
                                            "quiz"
                                        ],
                                        "example": "video"
                                    },
                                    "content_url": {
                                        "type": "string",
                                        "example": "https://example.com/updated-video.mp4"
                                    },
                                    "sort_order": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "duration": {
                                        "type": "integer",
                                        "example": 50
                                    },
                                    "is_preview": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "is_time_locked": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-10-01"
                                    },
                                    "start_time": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "09:30"
                                    },
                                    "unlock_day_after_purchase": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated lesson description."
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "Updated detailed content..."
                                    },
                                    "section_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "example": []
                                    },
                                    "files": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        },
                                        "example": []
                                    },
                                    "materials": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        },
                                        "example": []
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Lesson updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Lesson updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "section_ids": {
                                                    "type": "string",
                                                    "example": "1,2,3"
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Updated Lesson Title"
                                                },
                                                "duration": {
                                                    "type": "integer",
                                                    "example": 50
                                                },
                                                "is_preview": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "is_time_locked": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "start_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2025-10-01"
                                                },
                                                "start_time": {
                                                    "type": "string",
                                                    "format": "time",
                                                    "example": "09:30"
                                                },
                                                "unlock_day_after_purchase": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Updated lesson description."
                                                },
                                                "content": {
                                                    "type": "string",
                                                    "example": "Updated detailed content..."
                                                },
                                                "files": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "lessons/files/new-video.mp4"
                                                    }
                                                },
                                                "materials": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "lessons/files/new-video.mp4"
                                                    }
                                                },
                                                "content_type": {
                                                    "type": "string",
                                                    "example": "video"
                                                },
                                                "content_url": {
                                                    "type": "string",
                                                    "example": "https://example.com/updated-video.mp4"
                                                },
                                                "sort_order": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Lessons"
                ],
                "summary": "Create a new lesson for a course (role: Admin only)",
                "operationId": "0cb56050616e85692241b7cb1a3eef48",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "content_type"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Introduction to Laravel"
                                    },
                                    "content_type": {
                                        "type": "string",
                                        "enum": [
                                            "video",
                                            "text",
                                            "file",
                                            "pdf",
                                            "audio"
                                        ],
                                        "example": "video"
                                    },
                                    "content_url": {
                                        "type": "string",
                                        "example": "https://example.com/video.mp4"
                                    },
                                    "sort_order": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "duration": {
                                        "description": "Duration in minutes",
                                        "type": "integer",
                                        "example": 45
                                    },
                                    "is_preview": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "is_time_locked": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-10-01"
                                    },
                                    "start_time": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "09:00"
                                    },
                                    "unlock_day_after_purchase": {
                                        "type": "integer",
                                        "example": 7
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "This lesson introduces Laravel basics."
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "Lesson detailed text content here..."
                                    },
                                    "pdf_read_completion_required": {
                                        "type": "boolean",
                                        "example": ""
                                    },
                                    "section_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "example": []
                                    },
                                    "files": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        },
                                        "example": []
                                    },
                                    "materials": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        },
                                        "example": []
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Lesson created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Lesson created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "section_ids": {
                                                    "type": "string",
                                                    "example": "1,2,3"
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Introduction to Laravel"
                                                },
                                                "duration": {
                                                    "type": "integer",
                                                    "example": 45
                                                },
                                                "is_preview": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "is_time_locked": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "start_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2025-10-01"
                                                },
                                                "start_time": {
                                                    "type": "string",
                                                    "format": "time",
                                                    "example": "09:00"
                                                },
                                                "unlock_day_after_purchase": {
                                                    "type": "integer",
                                                    "example": 7
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "This lesson introduces Laravel basics."
                                                },
                                                "content": {
                                                    "type": "string",
                                                    "example": "Lesson detailed text content here..."
                                                },
                                                "files": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "lessons/files/video.mp4"
                                                    }
                                                },
                                                "materials": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "lessons/files/video.mp4"
                                                    }
                                                },
                                                "content_type": {
                                                    "type": "string",
                                                    "example": "video"
                                                },
                                                "content_url": {
                                                    "type": "string",
                                                    "example": "https://example.com/video.mp4"
                                                },
                                                "sort_order": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/lessons/{id}": {
            "get": {
                "tags": [
                    "Lessons"
                ],
                "summary": "Get a single lesson by ID (role: Admin only)",
                "operationId": "getLessonById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Lesson ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "lesson retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Laravel Basics"
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "Learn Laravel framework"
                                        },
                                        "price": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 49.99
                                        },
                                        "category_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-09-19T12:00:00Z"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-09-19T12:00:00Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized access"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden: Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have permission to view this course category"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Course Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Course Category not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict: Resource conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Conflict occurred while retrieving this resource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/lessons/{ids}": {
            "delete": {
                "tags": [
                    "Lessons"
                ],
                "summary": "Delete a lesson (role: Admin only)",
                "operationId": "6ee17e99bafc6430d2cffa52ecbf3365",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "path",
                        "description": "Lesson ID (comma-separated for multiple like 1,2,3)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lesson deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Lesson deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Lesson not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Lesson not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/lessons/progress": {
            "put": {
                "tags": [
                    "LessonProgress"
                ],
                "summary": "Update lesson progress for authenticated user (role: Student only)",
                "operationId": "updateLessonProgress",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "course_id",
                                    "lesson_id",
                                    "is_completed"
                                ],
                                "properties": {
                                    "course_id": {
                                        "description": "Course ID to update progress for",
                                        "type": "integer",
                                        "example": ""
                                    },
                                    "lesson_id": {
                                        "description": "Lesson ID to update progress for",
                                        "type": "integer",
                                        "example": ""
                                    },
                                    "is_completed": {
                                        "description": "Mark lesson as completed or not",
                                        "type": "boolean",
                                        "example": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Lesson progress updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Lesson progress updated"
                                        },
                                        "data": {
                                            "properties": {
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "lesson_id": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "course_id": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "progress_status": {
                                                    "type": "string",
                                                    "example": "completed"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid request payload"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized access"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have permission to update this lesson progress"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Lesson or enrollment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Lesson not found or user not enrolled"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Lesson progress already marked as completed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The is_completed field is required."
                                        },
                                        "errors": {
                                            "properties": {
                                                "is_completed": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The is_completed field must be true or false."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/lessons/time": {
            "put": {
                "tags": [
                    "LessonProgress"
                ],
                "summary": "Track lesson time (start / stop / heartbeat) for authenticated user (role: Student only)",
                "operationId": "trackLessonTime",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "course_id",
                                    "lesson_id",
                                    "event"
                                ],
                                "properties": {
                                    "course_id": {
                                        "description": "Course ID to update progress for",
                                        "type": "integer",
                                        "example": ""
                                    },
                                    "lesson_id": {
                                        "description": "Lesson ID",
                                        "type": "integer",
                                        "example": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Lesson time tracked successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Lesson time tracked"
                                        },
                                        "data": {
                                            "properties": {
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "lesson_id": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "total_time_spent": {
                                                    "description": "seconds",
                                                    "type": "integer",
                                                    "example": 3600
                                                },
                                                "is_completed": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "last_accessed": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-10-02T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Lesson not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/options": {
            "get": {
                "tags": [
                    "question_management.options"
                ],
                "summary": "Get all options (role: Admin only)",
                "description": "Returns a list of all available options.",
                "operationId": "getAllOptions",
                "responses": {
                    "200": {
                        "description": "List of options",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "text": {
                                                "type": "string",
                                                "example": "Option A"
                                            },
                                            "is_correct": {
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "matching_pair_image": {
                                                "type": "string",
                                                "example": "png"
                                            },
                                            "question_id": {
                                                "type": "integer",
                                                "example": 10
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2025-09-28T12:00:00Z"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2025-09-28T13:00:00Z"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "question_management.options"
                ],
                "summary": "Update an existing option (role: Admin only)",
                "description": "Updates an option's details such as text, correctness, or associated question.",
                "operationId": "updateOption",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "text",
                                    "is_correct",
                                    "question_id"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "ID of the option to update",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "text": {
                                        "description": "Option text",
                                        "type": "string",
                                        "example": "Option A"
                                    },
                                    "is_correct": {
                                        "description": "Whether this option is correct",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "matching_pair_image": {
                                        "description": "matching_pair_image",
                                        "type": "string",
                                        "example": true
                                    },
                                    "question_id": {
                                        "description": "Associated question ID",
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "image": {
                                        "description": "The Image of this option belongs to",
                                        "type": "string",
                                        "example": "png"
                                    },
                                    "explanation": {
                                        "description": "The explanation of this option belongs to",
                                        "type": "string",
                                        "example": "this one correct"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Option updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "text": {
                                            "type": "string",
                                            "example": "Option A"
                                        },
                                        "is_correct": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "matching_pair_image": {
                                            "type": "string",
                                            "example": "png"
                                        },
                                        "question_id": {
                                            "type": "integer",
                                            "example": 5
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-09-28T12:00:00Z"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-09-28T13:00:00Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid request."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Option not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Option with given ID not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed."
                                        },
                                        "errors": {
                                            "properties": {
                                                "text": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The text field is required."
                                                    }
                                                },
                                                "question_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The question_id must be a valid integer."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "question_management.options"
                ],
                "summary": "Create a new option (role: Admin only)",
                "description": "Creates a new option for a specific question.",
                "operationId": "createOption",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "text",
                                    "is_correct",
                                    "question_id"
                                ],
                                "properties": {
                                    "text": {
                                        "description": "The text value of the option",
                                        "type": "string",
                                        "example": "Option A"
                                    },
                                    "is_correct": {
                                        "description": "Whether this option is correct",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "matching_pair_image": {
                                        "description": "matching_pair_image",
                                        "type": "string",
                                        "example": true
                                    },
                                    "question_id": {
                                        "description": "The question ID this option belongs to",
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "image": {
                                        "description": "The Image of this option belongs to",
                                        "type": "string",
                                        "example": "png"
                                    },
                                    "explanation": {
                                        "description": "The explanation of this option belongs to",
                                        "type": "string",
                                        "example": "this one correct"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Option created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "text": {
                                            "type": "string",
                                            "example": "Option A"
                                        },
                                        "is_correct": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "matching_pair_image": {
                                            "type": "string",
                                            "example": "png"
                                        },
                                        "question_id": {
                                            "type": "integer",
                                            "example": 5
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-09-28T12:00:00Z"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-09-28T12:00:00Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid request."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed."
                                        },
                                        "errors": {
                                            "properties": {
                                                "text": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The text field is required."
                                                    }
                                                },
                                                "question_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The question_id must be a valid integer."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/options/{id}": {
            "get": {
                "tags": [
                    "question_management.options"
                ],
                "summary": "Get option by ID (role: Admin only)",
                "description": "Retrieve a specific option by its unique ID.",
                "operationId": "getOptionById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the option to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Option retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "text": {
                                            "type": "string",
                                            "example": "Option A"
                                        },
                                        "is_correct": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "matching_pair_image": {
                                            "type": "string",
                                            "example": "png"
                                        },
                                        "question_id": {
                                            "type": "integer",
                                            "example": 5
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-09-28T12:00:00Z"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-09-28T13:00:00Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Option not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Option not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/options/{ids}": {
            "delete": {
                "tags": [
                    "question_management.options"
                ],
                "summary": "Delete one or more options by ID (role: Admin only)",
                "operationId": "deleteOptions",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "path",
                        "description": "Comma-separated list of option IDs",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Options deleted successfully"
                    },
                    "400": {
                        "description": "Invalid or missing IDs"
                    }
                }
            }
        },
        "/v1.0/options/question/{question_id}": {
            "get": {
                "tags": [
                    "question_management.options"
                ],
                "summary": "Get options by question ID (role: Admin only)",
                "description": "Retrieve all options associated with a specific question ID.",
                "operationId": "getOptionByQuestionId",
                "parameters": [
                    {
                        "name": "question_id",
                        "in": "path",
                        "description": "The ID of the question to retrieve options for",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Options retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "text": {
                                                "type": "string",
                                                "example": "Option A"
                                            },
                                            "is_correct": {
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "matching_pair_image": {
                                                "type": "string",
                                                "example": "png"
                                            },
                                            "question_id": {
                                                "type": "integer",
                                                "example": 5
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2025-09-28T12:00:00Z"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2025-09-28T13:00:00Z"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No options found for the given question ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No options found for this question ID."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/question-categories": {
            "get": {
                "tags": [
                    "question_management.question_category"
                ],
                "summary": "Get all question categories (role: Admin only)",
                "description": "Fetches all question categories in the system.",
                "operationId": "getQuestionCategories",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Question categories fetched successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Mathematics"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "example": "2025-10-04T15:23:01.000000Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "example": "2025-10-04T15:23:01.000000Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "question_management.question_category"
                ],
                "summary": "Update an existing question category (role: Admin only)",
                "operationId": "updateQuestionCategory",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "title"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "title": {
                                        "type": "string",
                                        "example": "Programming"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "All programming related questions"
                                    },
                                    "slug": {
                                        "type": "string",
                                        "example": "programming"
                                    },
                                    "parent_question_category_id": {
                                        "type": "integer",
                                        "example": null,
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Question category updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Question category updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Programming"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "All programming related questions"
                                                },
                                                "slug": {
                                                    "type": "string",
                                                    "example": "programming"
                                                },
                                                "parent_question_category_id": {
                                                    "type": "integer",
                                                    "example": null,
                                                    "nullable": true
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-10-04T21:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Question category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Question category not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "question_management.question_category"
                ],
                "summary": "Create a new question category (role: Admin only)",
                "operationId": "createQuestionCategory",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "slug"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Programming"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Questions related to programming topics."
                                    },
                                    "slug": {
                                        "type": "string",
                                        "example": "programming"
                                    },
                                    "parent_question_category_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Question category created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Question category created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Programming"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Questions related to programming topics."
                                                },
                                                "slug": {
                                                    "type": "string",
                                                    "example": "programming"
                                                },
                                                "parent_question_category_id": {
                                                    "type": "integer",
                                                    "example": null
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2025-10-04T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/question-categories/{id}": {
            "get": {
                "tags": [
                    "question_management.question_category"
                ],
                "summary": "Get a single question category by ID (role: Admin only)",
                "operationId": "getQuestionCategoryById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Course Question ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Question Category retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Web Development"
                                        },
                                        "slug": {
                                            "type": "string",
                                            "example": "web-development"
                                        },
                                        "parent_question_category_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "description"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-09-18T12:00:00Z"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-09-18T12:00:00Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized access"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden: Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have permission to view this course category"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Course Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Course Category not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict: Resource conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Conflict occurred while retrieving this resource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "question_management.question_category"
                ],
                "summary": "Delete a question category (role: Admin only)",
                "description": "Deletes a question category by its ID.",
                "operationId": "deleteQuestionCategory",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "path",
                        "description": "ID of the question category to delete (comma-separated like 1,2,3)",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Question Category deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Question category deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Question category not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/questions": {
            "get": {
                "tags": [
                    "question_management.question"
                ],
                "summary": "Get all questions (role: Admin only)",
                "description": "Retrieve a list of all questions.",
                "operationId": "getAllQuestions",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": ""
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": ""
                        }
                    },
                    {
                        "name": "question_type",
                        "in": "query",
                        "description": "Filter by question type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of questions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "question_text": {
                                                "type": "string",
                                                "example": "What is the capital of France?"
                                            },
                                            "question_type": {
                                                "type": "string",
                                                "example": "mcq"
                                            },
                                            "points": {
                                                "type": "integer",
                                                "example": 5
                                            },
                                            "time_limit": {
                                                "type": "integer",
                                                "example": 30,
                                                "nullable": true
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2025-09-28T12:00:00Z"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2025-09-28T13:00:00Z"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid request."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have permission to perform this action."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No questions found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No questions found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "question_management.question"
                ],
                "summary": "Update an existing question with options (role: Admin only)",
                "description": "Updates a question and its options by question ID.",
                "operationId": "updateQuestion",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "question_text",
                                    "question_type",
                                    "points",
                                    "options"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "question_text": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Updated question text"
                                    },
                                    "question_type": {
                                        "type": "string",
                                        "enum": [
                                            "true_false",
                                            "single",
                                            "multiple",
                                            "matching",
                                            "file_matching",
                                            "keywords",
                                            "fill_in_the_blanks"
                                        ],
                                        "example": "single"
                                    },
                                    "category_ids": {
                                        "description": "Array of category IDs for this course",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "points": {
                                        "type": "integer",
                                        "minimum": 1,
                                        "example": 5
                                    },
                                    "time_limit": {
                                        "type": "integer",
                                        "minimum": 0,
                                        "example": 30,
                                        "nullable": true
                                    },
                                    "is_required": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "options": {
                                        "description": "List of options for the question",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": null,
                                                    "nullable": true
                                                },
                                                "option_text": {
                                                    "type": "string",
                                                    "example": "Paris",
                                                    "nullable": true
                                                },
                                                "is_correct": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "explanation": {
                                                    "type": "string",
                                                    "example": "Paris is the capital of France",
                                                    "nullable": true
                                                },
                                                "image": {
                                                    "type": "string",
                                                    "example": "https://example.com/image.png",
                                                    "nullable": true
                                                },
                                                "matching_pair_text": {
                                                    "type": "string",
                                                    "example": "France",
                                                    "nullable": true
                                                },
                                                "matching_pair_image": {
                                                    "type": "string",
                                                    "example": "https://example.com/pair-image.png",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Question updated successfully"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Question not found"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "question_management.question"
                ],
                "summary": "Create or update a question (role: Admin only)",
                "description": "Creates a new question or updates existing options for a specific quiz.",
                "operationId": "createQuestion",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "question_text",
                                    "question_type",
                                    "points",
                                    "options"
                                ],
                                "properties": {
                                    "question_text": {
                                        "description": "The text of the question",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "What is the capital of France?"
                                    },
                                    "question_type": {
                                        "description": "Type of the question",
                                        "type": "string",
                                        "enum": [
                                            "true_false",
                                            "single",
                                            "multiple",
                                            "matching",
                                            "file_matching",
                                            "keywords",
                                            "fill_in_the_blanks"
                                        ],
                                        "example": "true_false"
                                    },
                                    "points": {
                                        "description": "Number of points for the question",
                                        "type": "integer",
                                        "minimum": 1,
                                        "example": 5
                                    },
                                    "time_limit": {
                                        "description": "Time limit in seconds (nullable)",
                                        "type": "integer",
                                        "minimum": 0,
                                        "example": 30,
                                        "nullable": true
                                    },
                                    "category_ids": {
                                        "description": "Array of category IDs for this question",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "is_required": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "options": {
                                        "description": "List of options for the question",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "description": "ID when updating an option",
                                                    "type": "integer",
                                                    "example": null,
                                                    "nullable": true
                                                },
                                                "option_text": {
                                                    "description": "Option text",
                                                    "type": "string",
                                                    "example": "Paris",
                                                    "nullable": true
                                                },
                                                "is_correct": {
                                                    "description": "Whether the option is correct",
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "explanation": {
                                                    "description": "Explanation for the option",
                                                    "type": "string",
                                                    "example": "Paris is the capital of France",
                                                    "nullable": true
                                                },
                                                "image": {
                                                    "description": "Image URL or file path",
                                                    "type": "string",
                                                    "example": "https://example.com/image.png",
                                                    "nullable": true
                                                },
                                                "matching_pair_text": {
                                                    "description": "Matching pair text",
                                                    "type": "string",
                                                    "example": "France",
                                                    "nullable": true
                                                },
                                                "matching_pair_image": {
                                                    "description": "Matching pair image URL or file path",
                                                    "type": "string",
                                                    "example": "https://example.com/pair-image.png",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Question created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Question created successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "question_text": {
                                                    "type": "string",
                                                    "example": "What is the capital of France?"
                                                },
                                                "question_type": {
                                                    "type": "string",
                                                    "example": "single"
                                                },
                                                "points": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "time_limit": {
                                                    "type": "integer",
                                                    "example": 30,
                                                    "nullable": true
                                                },
                                                "is_required": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-09-28T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-09-28T12:00:00Z"
                                                },
                                                "options": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "option_text": {
                                                                "type": "string",
                                                                "example": "Paris"
                                                            },
                                                            "is_correct": {
                                                                "type": "boolean",
                                                                "example": true
                                                            },
                                                            "explanation": {
                                                                "type": "string",
                                                                "example": "Paris is the capital of France"
                                                            },
                                                            "image": {
                                                                "type": "string",
                                                                "example": "https://example.com/image.png"
                                                            },
                                                            "matching_pair_text": {
                                                                "type": "string",
                                                                "example": "France"
                                                            },
                                                            "matching_pair_image": {
                                                                "type": "string",
                                                                "example": "https://example.com/pair-image.png"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Quiz not found"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/questions/{id}": {
            "get": {
                "tags": [
                    "question_management.question"
                ],
                "summary": "Get question by ID (role: Admin only)",
                "description": "Retrieve a specific question by its unique ID.",
                "operationId": "getQuestionById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the question to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Question retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Question retrieved successfully"
                                        },
                                        "question": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "question_text": {
                                                    "type": "string",
                                                    "example": "What is the capital of France?"
                                                },
                                                "question_type": {
                                                    "type": "string",
                                                    "example": "mcq"
                                                },
                                                "points": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "time_limit": {
                                                    "type": "integer",
                                                    "example": 30,
                                                    "nullable": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-09-28T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-09-28T13:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid request."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have permission to perform this action."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Question not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Question not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/questions/{ids}": {
            "delete": {
                "tags": [
                    "question_management.question"
                ],
                "summary": "Delete one or more questions by ID (role: Admin only)",
                "description": "Deletes one or multiple questions specified by a comma-separated list of IDs.",
                "operationId": "deleteQuestions",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "path",
                        "description": "Comma-separated list of question IDs to delete like 1,2,3",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Questions deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Questions deleted successfully"
                                        },
                                        "deleted_count": {
                                            "type": "integer",
                                            "example": 3
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid request."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have permission to perform this action."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Question(s) not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Question(s) not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid ID format."
                                        },
                                        "errors": {
                                            "properties": {
                                                "ids": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Each ID must be an integer."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/quiz-attempts/grade": {
            "put": {
                "tags": [
                    "QuizAttempts"
                ],
                "summary": "Manually grade a quiz attempt (role: Admin, Owner, or Lecturer only)",
                "operationId": "gradeQuizAttempt",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "attempt_id",
                                    "question_id",
                                    "score"
                                ],
                                "properties": {
                                    "attempt_id": {
                                        "description": "Quiz Attempt ID",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "question_id": {
                                        "description": "Question ID to grade",
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "score": {
                                        "description": "Score assigned for the question or attempt",
                                        "type": "number",
                                        "example": 10
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Grade updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Grade updated."
                                        },
                                        "data": {
                                            "properties": {
                                                "attempt_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "new_score": {
                                                    "type": "number",
                                                    "example": 90
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid request parameters."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have permission to perform this action."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Quiz attempt or question not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Quiz attempt not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The score field is required."
                                        },
                                        "errors": {
                                            "properties": {
                                                "score": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The score field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/quizzes/attempts/start": {
            "post": {
                "tags": [
                    "QuizAttempts"
                ],
                "summary": "Start a quiz attempt for authenticated user (role: Student only)",
                "operationId": "startQuizAttempt",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "quiz_id"
                                ],
                                "properties": {
                                    "quiz_id": {
                                        "description": "ID of the quiz to start attempt for",
                                        "type": "integer",
                                        "example": ""
                                    },
                                    "course_id": {
                                        "description": "ID of the course to start attempt for",
                                        "type": "integer",
                                        "example": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Quiz attempt started"
                    },
                    "400": {
                        "description": "User already has an active attempt or invalid quiz ID"
                    },
                    "401": {
                        "description": "Unauthorized or user not a student"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/quizzes/attempts/submit": {
            "post": {
                "tags": [
                    "QuizAttempts"
                ],
                "summary": "Submit a quiz attempt for authenticated user (role: Student only)",
                "operationId": "submitQuizAttempt",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "course_id",
                                    "quiz_id",
                                    "answers"
                                ],
                                "properties": {
                                    "course_id": {
                                        "description": "ID of the course",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "quiz_id": {
                                        "description": "ID of the quiz being submitted",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "answers": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "question_id",
                                                "user_answer_ids"
                                            ],
                                            "properties": {
                                                "question_id": {
                                                    "description": "ID of the question",
                                                    "type": "integer",
                                                    "example": 12
                                                },
                                                "user_answer_ids": {
                                                    "description": "Array of user's selected answer IDs. Multiple IDs allowed for multi-choice questions",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "integer"
                                                    },
                                                    "example": [
                                                        1,
                                                        3
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Quiz attempt submitted successfully"
                    },
                    "400": {
                        "description": "Invalid input or already submitted"
                    },
                    "401": {
                        "description": "Unauthorized or user not a student"
                    },
                    "403": {
                        "description": "Time is up! Quiz attempt expired"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/client/quizzes/{id}": {
            "get": {
                "tags": [
                    "Quizzes"
                ],
                "summary": "Get quiz details with questions and options (role: Admin only)",
                "operationId": "getQuizWithQuestionsByIdClient",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Quiz ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": ""
                        }
                    },
                    {
                        "name": "is_randomized",
                        "in": "query",
                        "description": "Whether to randomize the quiz questions",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "example": ""
                        }
                    },
                    {
                        "name": "question_limit",
                        "in": "query",
                        "description": "The maximum number of questions to include in the quiz",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Quiz retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Quiz retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Laravel Basics Quiz"
                                                },
                                                "questions": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "question_id": {
                                                                "type": "integer",
                                                                "example": 10
                                                            },
                                                            "text": {
                                                                "type": "string",
                                                                "example": "What is Laravel?"
                                                            },
                                                            "type": {
                                                                "type": "string",
                                                                "example": "multiple_choice"
                                                            },
                                                            "options": {
                                                                "type": "array",
                                                                "items": {
                                                                    "properties": {
                                                                        "option_id": {
                                                                            "type": "integer",
                                                                            "example": 101
                                                                        },
                                                                        "text": {
                                                                            "type": "string",
                                                                            "example": "A PHP framework"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid request parameters."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have permission to access this resource."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Quiz not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Quiz not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/quizzes/{id}": {
            "get": {
                "tags": [
                    "Quizzes"
                ],
                "summary": "Get quiz details with questions and options (role: Admin only)",
                "operationId": "getQuizWithQuestionsById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Quiz ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": ""
                        }
                    },
                    {
                        "name": "is_randomized",
                        "in": "query",
                        "description": "Whether to randomize the quiz questions",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "example": ""
                        }
                    },
                    {
                        "name": "question_limit",
                        "in": "query",
                        "description": "The maximum number of questions to include in the quiz",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Quiz retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Quiz retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Laravel Basics Quiz"
                                                },
                                                "questions": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "question_id": {
                                                                "type": "integer",
                                                                "example": 10
                                                            },
                                                            "text": {
                                                                "type": "string",
                                                                "example": "What is Laravel?"
                                                            },
                                                            "type": {
                                                                "type": "string",
                                                                "example": "multiple_choice"
                                                            },
                                                            "options": {
                                                                "type": "array",
                                                                "items": {
                                                                    "properties": {
                                                                        "option_id": {
                                                                            "type": "integer",
                                                                            "example": 101
                                                                        },
                                                                        "text": {
                                                                            "type": "string",
                                                                            "example": "A PHP framework"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid request parameters."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have permission to access this resource."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Quiz not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Quiz not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Quizzes"
                ],
                "summary": "Delete a quiz (role: Admin only)",
                "operationId": "deleteQuiz",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Quiz deleted successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/quizzes": {
            "get": {
                "tags": [
                    "Quizzes"
                ],
                "summary": "Get quiz details with questions and options (role: Admin only)",
                "operationId": "getQuizWithQuestions",
                "parameters": [
                    {
                        "name": "is_randomized",
                        "in": "query",
                        "description": "Whether to randomize the quiz questions",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "example": ""
                        }
                    },
                    {
                        "name": "question_limit",
                        "in": "query",
                        "description": "The maximum number of questions to include in the quiz",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Quiz retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Quiz retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Laravel Basics Quiz"
                                                },
                                                "questions": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "question_id": {
                                                                "type": "integer",
                                                                "example": 10
                                                            },
                                                            "text": {
                                                                "type": "string",
                                                                "example": "What is Laravel?"
                                                            },
                                                            "type": {
                                                                "type": "string",
                                                                "example": "multiple_choice"
                                                            },
                                                            "options": {
                                                                "type": "array",
                                                                "items": {
                                                                    "properties": {
                                                                        "option_id": {
                                                                            "type": "integer",
                                                                            "example": 101
                                                                        },
                                                                        "text": {
                                                                            "type": "string",
                                                                            "example": "A PHP framework"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid request parameters."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have permission to access this resource."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Quiz not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Quiz not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Quizzes"
                ],
                "summary": "Update a quiz and sync questions (role: Admin only)",
                "operationId": "updateQuiz",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Updated Quiz Title"
                                    },
                                    "section_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "example": []
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated description"
                                    },
                                    "question_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 2
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Quiz updated successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Quizzes"
                ],
                "summary": "Create a new quiz and attach questions (role: Admin only)",
                "operationId": "createQuiz",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Laravel Basics Quiz"
                                    },
                                    "section_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "example": []
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Short description of the quiz"
                                    },
                                    "time_limit": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "time_unit": {
                                        "type": "string",
                                        "example": "Hours"
                                    },
                                    "style": {
                                        "type": "string",
                                        "example": "pagination"
                                    },
                                    "is_randomized": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "allow_retake_after_pass": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "max_attempts": {
                                        "type": "integer",
                                        "example": 4
                                    },
                                    "points_cut_after_retake": {
                                        "type": "integer",
                                        "example": 20
                                    },
                                    "passing_grade": {
                                        "type": "integer",
                                        "example": 50
                                    },
                                    "question_limit": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "question_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Quiz created successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/reports/sales": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Get sales report for all courses (role: Admin only)",
                "operationId": "sales",
                "responses": {
                    "200": {
                        "description": "Sales report retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Sales report retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "course_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "Laravel Basics"
                                                    },
                                                    "total_revenue": {
                                                        "type": "number",
                                                        "example": 5000
                                                    },
                                                    "total_sales_count": {
                                                        "type": "integer",
                                                        "example": 20
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid parameters"
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required"
                    },
                    "403": {
                        "description": "Forbidden - Only admin users can access this report"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/reports/enrollments": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Get enrollment count per course (role: Admin only)",
                "operationId": "enrollmentReport",
                "responses": {
                    "200": {
                        "description": "Enrollment report retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Enrollment report retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "course_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "Laravel Basics"
                                                    },
                                                    "enrolled_students_count": {
                                                        "type": "integer",
                                                        "example": 25
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid request parameters."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Only admin users can access this report",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have permission to access this report."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Resource not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred while retrieving the report."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/sections/{ids}": {
            "delete": {
                "tags": [
                    "section"
                ],
                "summary": "Delete a section and its lessons (role: Admin only)",
                "operationId": "deleteSection",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "path",
                        "description": "ID of the section to delete (comma-separated for multiple)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "1,2,3"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Section deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Section deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Section not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Section not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/sections": {
            "get": {
                "tags": [
                    "section"
                ],
                "summary": "Fetch all sections",
                "description": "Retrieve a list of all sections (role: Admin only)",
                "operationId": "getSections",
                "responses": {
                    "200": {
                        "description": "Sections fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Sections fetched successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "course_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "Introduction to Laravel"
                                                    },
                                                    "created_by": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-09-20T12:00:00Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-09-20T12:00:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have permission to perform this action."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "section"
                ],
                "summary": "Create a new section for a course (role: Admin only)",
                "operationId": "updateSection",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "title",
                                    "course_id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "course_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "title": {
                                        "type": "string",
                                        "example": "Introduction to Laravel"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Section updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Section updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "course_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Introduction to Laravel"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-09-20T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-09-20T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid request."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have permission to perform this action."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Course not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Course not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "A section with this title already exists for this course."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The title field is required."
                                        },
                                        "errors": {
                                            "properties": {
                                                "title": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The title field is required."
                                                    }
                                                },
                                                "course_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The course_id field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "section"
                ],
                "summary": "Create a new section for a course (role: Admin only)",
                "operationId": "createSection",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "course_id"
                                ],
                                "properties": {
                                    "course_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "title": {
                                        "type": "string",
                                        "example": "Introduction to Laravel"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Section created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Section created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "course_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Introduction to Laravel"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-09-20T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-09-20T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid request."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have permission to perform this action."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Course not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Course not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "A section with this title already exists for this course."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The title field is required."
                                        },
                                        "errors": {
                                            "properties": {
                                                "title": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The title field is required."
                                                    }
                                                },
                                                "course_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The course_id field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/sections-with-lessons": {
            "put": {
                "tags": [
                    "section"
                ],
                "summary": "Update a section with lessons and quizzes (role: Admin only)",
                "operationId": "updateSectionWithLessons",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "title",
                                    "course_id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "course_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "title": {
                                        "type": "string",
                                        "example": "Introduction to Laravel"
                                    },
                                    "order": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "sectionable": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "id",
                                                "type"
                                            ],
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "lesson",
                                                        "quiz"
                                                    ],
                                                    "example": "lesson"
                                                },
                                                "order": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Section updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Section updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "course_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "order": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Introduction to Laravel"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-09-20T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-09-20T12:00:00Z"
                                                },
                                                "lessons": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 10
                                                            },
                                                            "title": {
                                                                "type": "string",
                                                                "example": "Lesson One"
                                                            },
                                                            "pivot": {
                                                                "properties": {
                                                                    "order": {
                                                                        "type": "integer",
                                                                        "example": 1
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "quizzes": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 5
                                                            },
                                                            "title": {
                                                                "type": "string",
                                                                "example": "Quiz One"
                                                            },
                                                            "pivot": {
                                                                "properties": {
                                                                    "order": {
                                                                        "type": "integer",
                                                                        "example": 2
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid request."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have permission to perform this action."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Course not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Course not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "A section with this title already exists for this course."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The title field is required."
                                        },
                                        "errors": {
                                            "properties": {
                                                "title": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The title field is required."
                                                    }
                                                },
                                                "course_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The course_id field is required."
                                                    }
                                                },
                                                "sectionable": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The sectionable field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/sections-add-lessons": {
            "put": {
                "tags": [
                    "section"
                ],
                "summary": "Update a section with lessons and quizzes (role: Admin only)",
                "operationId": "updateSectionAddLessons",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "title",
                                    "course_id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "course_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "title": {
                                        "type": "string",
                                        "example": "Introduction to Laravel"
                                    },
                                    "order": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "sectionable": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "id",
                                                "type"
                                            ],
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "lesson",
                                                        "quiz"
                                                    ],
                                                    "example": "lesson"
                                                },
                                                "order": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Section updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Section updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "course_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "order": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Introduction to Laravel"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-09-20T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-09-20T12:00:00Z"
                                                },
                                                "lessons": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 10
                                                            },
                                                            "title": {
                                                                "type": "string",
                                                                "example": "Lesson One"
                                                            },
                                                            "pivot": {
                                                                "properties": {
                                                                    "order": {
                                                                        "type": "integer",
                                                                        "example": 1
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "quizzes": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 5
                                                            },
                                                            "title": {
                                                                "type": "string",
                                                                "example": "Quiz One"
                                                            },
                                                            "pivot": {
                                                                "properties": {
                                                                    "order": {
                                                                        "type": "integer",
                                                                        "example": 2
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid request."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have permission to perform this action."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Course not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Course not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "A section with this title already exists for this course."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The title field is required."
                                        },
                                        "errors": {
                                            "properties": {
                                                "title": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The title field is required."
                                                    }
                                                },
                                                "course_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The course_id field is required."
                                                    }
                                                },
                                                "sectionable": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The sectionable field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/sections-remove-lessons": {
            "put": {
                "tags": [
                    "section"
                ],
                "summary": "Remove lessons or quizzes from a section (role: Admin only)",
                "operationId": "updateSectionRemoveLessons",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "course_id",
                                    "title",
                                    "sectionable"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "course_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "title": {
                                        "type": "string",
                                        "example": "Introduction to Laravel"
                                    },
                                    "sectionable": {
                                        "description": "Array of lesson/quiz IDs to remove from section",
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "id"
                                            ],
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 10
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Section updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Section updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "course_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Introduction to Laravel"
                                                },
                                                "lessons": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 10
                                                            },
                                                            "title": {
                                                                "type": "string",
                                                                "example": "Lesson One"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "quizzes": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 5
                                                            },
                                                            "title": {
                                                                "type": "string",
                                                                "example": "Quiz One"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The sectionable field is required."
                                        },
                                        "errors": {
                                            "properties": {
                                                "sectionable": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The sectionable field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/sections/{id}": {
            "get": {
                "tags": [
                    "section"
                ],
                "summary": "Fetch a single section by ID",
                "description": "Retrieve details of a specific section using its ID (role: Admin only)",
                "operationId": "getSectionById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the section",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Section fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Section fetched successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "course_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Introduction to Laravel"
                                                },
                                                "created_by": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-09-20T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-09-20T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have permission to perform this action."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Section not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Section not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/business-settings": {
            "get": {
                "tags": [
                    "setting"
                ],
                "summary": "This method is to get busuness setting (role: Admin only)",
                "description": "This method is to get busuness setting",
                "operationId": "getBusinessSettings",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "setting"
                ],
                "summary": "Update business settings (role: Admin/Owner/Lecturer only)",
                "description": "Updates business settings. All fields are optional; only passed fields will be updated.",
                "operationId": "updateBusinessSettings",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "general__main_color": {
                                        "type": "string"
                                    },
                                    "general__secondary_color": {
                                        "type": "string"
                                    },
                                    "general__accent_color": {
                                        "type": "string"
                                    },
                                    "general__danger_color": {
                                        "type": "string"
                                    },
                                    "general__warning_color": {
                                        "type": "string"
                                    },
                                    "general__success_color": {
                                        "type": "string"
                                    },
                                    "general__featured_courses_count": {
                                        "type": "integer"
                                    },
                                    "general__loading_animation": {
                                        "type": "string"
                                    },
                                    "courses__import_demo_courses": {
                                        "type": "boolean"
                                    },
                                    "courses__courses_page": {
                                        "type": "string"
                                    },
                                    "courses__courses_page_layout": {
                                        "type": "string"
                                    },
                                    "courses__courses_per_row": {
                                        "type": "integer"
                                    },
                                    "courses__courses_per_page": {
                                        "type": "integer"
                                    },
                                    "courses__load_more_type": {
                                        "type": "string"
                                    },
                                    "courses__course_card_style": {
                                        "type": "string"
                                    },
                                    "courses__course_card_info_position": {
                                        "type": "string"
                                    },
                                    "courses__course_image_size": {
                                        "type": "string"
                                    },
                                    "courses__lazy_loading": {
                                        "type": "boolean"
                                    },
                                    "courses__category_slug": {
                                        "type": "string"
                                    },
                                    "courses__show_featured_courses_on_top": {
                                        "type": "boolean"
                                    },
                                    "courses__featured_courses_count": {
                                        "type": "integer"
                                    },
                                    "courses__filters_on_archive_page": {
                                        "type": "boolean"
                                    },
                                    "course__page_style": {
                                        "type": "string"
                                    },
                                    "course__show_course_reviews": {
                                        "type": "boolean"
                                    },
                                    "course__default_tab": {
                                        "type": "string"
                                    },
                                    "course__use_emoji_in_quizzes": {
                                        "type": "boolean"
                                    },
                                    "course__show_description_tab": {
                                        "type": "boolean"
                                    },
                                    "course__show_curriculum_tab": {
                                        "type": "boolean"
                                    },
                                    "course__show_faq_tab": {
                                        "type": "boolean"
                                    },
                                    "course__show_notice_tab": {
                                        "type": "boolean"
                                    },
                                    "course__course_levels": {
                                        "type": "array",
                                        "items": {
                                            "type": "object"
                                        }
                                    },
                                    "course__allow_presto_player": {
                                        "type": "boolean"
                                    },
                                    "course__auto_enroll_free_courses": {
                                        "type": "boolean"
                                    },
                                    "course__allow_reviews_non_enrolled": {
                                        "type": "boolean"
                                    },
                                    "course__allow_basic_info_section": {
                                        "type": "boolean"
                                    },
                                    "course__allow_course_requirements_section": {
                                        "type": "boolean"
                                    },
                                    "course__allow_intended_audience_section": {
                                        "type": "boolean"
                                    },
                                    "course__preferred_video_sources": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "course__preferred_audio_sources": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "course__bottom_sticky_panel": {
                                        "type": "boolean"
                                    },
                                    "course__show_popular_courses": {
                                        "type": "boolean"
                                    },
                                    "course__show_related_courses": {
                                        "type": "boolean"
                                    },
                                    "course__disable_default_completion_image": {
                                        "type": "boolean"
                                    },
                                    "course__failed_course_image": {
                                        "type": "string"
                                    },
                                    "course__passed_course_image": {
                                        "type": "string"
                                    },
                                    "certificate__threshold": {
                                        "type": "integer"
                                    },
                                    "certificate__allow_instructor_create": {
                                        "type": "boolean"
                                    },
                                    "certificate__use_current_student_name": {
                                        "type": "boolean"
                                    },
                                    "certificate__builder_data": {
                                        "type": "array",
                                        "items": {
                                            "type": "object"
                                        }
                                    },
                                    "stripe_enabled": {
                                        "type": "boolean"
                                    },
                                    "STRIPE_KEY": {
                                        "type": "string"
                                    },
                                    "STRIPE_SECRET": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "422": {
                        "description": "Unprocessable Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/client/business-settings": {
            "get": {
                "tags": [
                    "setting"
                ],
                "summary": "This method is to get Business setting (role: Admin only)",
                "description": "This method is to get Business_setting",
                "operationId": "getBusinessSettingsClient",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "per_page",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    },
                    {
                        "name": "business_tier_id",
                        "in": "query",
                        "description": "business_tier_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "order_by",
                        "required": true,
                        "example": "ASC"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/payments/intent": {
            "post": {
                "tags": [
                    "Payments"
                ],
                "summary": "Create a Stripe Payment Intent for a course (role: Student only)",
                "description": "Creates a Stripe Payment Intent for the authenticated user to pay for a course. Discount and coupon logic are currently disabled.",
                "operationId": "createPaymentIntent",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "course_id"
                                ],
                                "properties": {
                                    "course_id": {
                                        "description": "The ID of the course being purchased",
                                        "type": "integer",
                                        "example": 101
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment intent created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "clientSecret": {
                                            "type": "string",
                                            "example": "pi_3OzFKa2LqWcU...secret_123"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid request payload."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Stripe not enabled or settings missing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Stripe is not enabled."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Course not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Course not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The course_id field is required."
                                        },
                                        "errors": {
                                            "properties": {
                                                "course_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The course_id field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred while creating the payment intent."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/payments": {
            "get": {
                "tags": [
                    "Payments"
                ],
                "summary": "Get payments with filters",
                "operationId": "getPayments",
                "parameters": [
                    {
                        "name": "course_id",
                        "in": "query",
                        "description": "Filter by course ID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by payment status: completed, pending, failed",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "completed"
                        }
                    },
                    {
                        "name": "transaction_id",
                        "in": "query",
                        "description": "Search by transaction ID",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "PAY-001"
                        }
                    },
                    {
                        "name": "student_name",
                        "in": "query",
                        "description": "Search by student name",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "John"
                        }
                    },
                    {
                        "name": "date_from",
                        "in": "query",
                        "description": "Filter from date (Y-m-d)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2024-01-01"
                        }
                    },
                    {
                        "name": "date_to",
                        "in": "query",
                        "description": "Filter to date (Y-m-d)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2024-01-31"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of payments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Payments retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "transaction_id": {
                                                        "type": "string",
                                                        "example": "PAY-001"
                                                    },
                                                    "amount": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 73.99
                                                    },
                                                    "method": {
                                                        "type": "string",
                                                        "example": "credit_card"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "completed"
                                                    },
                                                    "paid_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-01-13T12:00:00Z"
                                                    },
                                                    "course": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "title": {
                                                                "type": "string",
                                                                "example": "React Fundamentals"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "student": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "John Doe"
                                                            },
                                                            "email": {
                                                                "type": "string",
                                                                "example": "john@example.com"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "summary": {
                                            "properties": {
                                                "total_earnings": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 15420.5
                                                },
                                                "this_month_earnings": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 3240.75
                                                },
                                                "available_balance": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 892.3
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have permission to access this resource."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/payments/{id}": {
            "get": {
                "tags": [
                    "Payments"
                ],
                "summary": "Get payment details by ID",
                "operationId": "getPaymentDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payment ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Payment retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "transaction_id": {
                                                    "type": "string",
                                                    "example": "PAY-001"
                                                },
                                                "amount": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 73.99
                                                },
                                                "method": {
                                                    "type": "string",
                                                    "example": "credit_card"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "completed"
                                                },
                                                "payment_intent_id": {
                                                    "type": "string",
                                                    "example": "pi_123456789"
                                                },
                                                "paid_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-01-13T12:00:00Z"
                                                },
                                                "course": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "title": {
                                                            "type": "string",
                                                            "example": "React Fundamentals"
                                                        },
                                                        "description": {
                                                            "type": "string",
                                                            "example": "Learn React fundamentals"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "student": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "john@example.com"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Payment not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/courses/{id}/complete": {
            "post": {
                "tags": [
                    "Trash"
                ],
                "summary": "Generate a certificate for a completed course ",
                "operationId": "generateCertificate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Course ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 101
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "course_id"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "course_id": {
                                        "type": "integer",
                                        "example": 101
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Certificate generated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Certificate generated."
                                        },
                                        "data": {
                                            "properties": {
                                                "certificate_id": {
                                                    "type": "integer",
                                                    "example": 10
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Course not completed yet",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Course not completed yet."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have permission to access this resource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User, course, or enrollment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The user_id field is required."
                                        },
                                        "errors": {
                                            "properties": {
                                                "user_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The user_id field is required."
                                                    }
                                                },
                                                "course_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The course_id field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/certificates/download/{id}": {
            "get": {
                "tags": [
                    "Trash"
                ],
                "summary": "Download a certificate PDF",
                "operationId": "downloadCertificate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Certificate ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Certificate PDF download",
                        "content": {
                            "application/pdf": {}
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid certificate ID"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have permission to access this resource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "File not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "File not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/certificates/verify/{code}": {
            "get": {
                "tags": [
                    "Trash"
                ],
                "summary": "Verify a certificate by code",
                "operationId": "verifyCertificate",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "description": "Certificate code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "ABCD123XYZ"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Certificate is valid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Certificate is valid"
                                        },
                                        "data": {
                                            "properties": {
                                                "is_valid": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "user": {
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "course": {
                                                    "properties": {
                                                        "title": {
                                                            "type": "string",
                                                            "example": "Laravel Basics"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "issued_at": {
                                                    "type": "string",
                                                    "example": "2025-09-16 12:00:00"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid certificate code"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have permission to access this resource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Certificate not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Certificate not found"
                                        },
                                        "data": {
                                            "properties": {
                                                "is_valid": {
                                                    "type": "boolean",
                                                    "example": false
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1.0/users/{id}": {
            "get": {
                "tags": [
                    "user_management"
                ],
                "summary": "Get user details by ID (role: Admin only)",
                "operationId": "getUserById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Mr."
                                        },
                                        "first_name": {
                                            "type": "string",
                                            "example": "John"
                                        },
                                        "last_name": {
                                            "type": "string",
                                            "example": "Doe"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "john@example.com"
                                        },
                                        "role": {
                                            "type": "string",
                                            "example": "student"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid ID format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid user ID format"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized access"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Insufficient permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have permission to access this resource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred while retrieving user details"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/users": {
            "get": {
                "tags": [
                    "user_management"
                ],
                "summary": "Get all users (role: Admin only)",
                "description": "Retrieve a list of all users in the system",
                "operationId": "getAllUsers",
                "parameters": [
                    {
                        "name": "role",
                        "in": "query",
                        "description": "Filter users by role name (e.g., admin, student, lecturer)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "student"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Users retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Users retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "title": "User",
                                                "required": [
                                                    "id",
                                                    "first_name",
                                                    "last_name",
                                                    "email"
                                                ],
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "Mr."
                                                    },
                                                    "first_name": {
                                                        "type": "string",
                                                        "example": "John"
                                                    },
                                                    "last_name": {
                                                        "type": "string",
                                                        "example": "Doe"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "example": "john.doe@example.com"
                                                    },
                                                    "business_id": {
                                                        "type": "integer",
                                                        "example": 1,
                                                        "nullable": true
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-09-23T12:00:00Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-09-23T12:00:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid request parameters"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have permission to access this resource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Resource not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "user_management"
                ],
                "summary": "Update user profile (role: Admin only)",
                "operationId": "updateUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "title",
                                    "first_name",
                                    "last_name",
                                    "email"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "title": {
                                        "type": "string",
                                        "example": "Mr."
                                    },
                                    "first_name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Mr."
                                        },
                                        "first_name": {
                                            "type": "string",
                                            "example": "John"
                                        },
                                        "last_name": {
                                            "type": "string",
                                            "example": "Doe"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "john@example.com"
                                        },
                                        "role": {
                                            "type": "string",
                                            "example": "student"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid request payload"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized access"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Insufficient permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have permission to update this user"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Email already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Email is already in use"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The email field must be a valid email address"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred while updating the user profile"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/users/{ids}": {
            "delete": {
                "tags": [
                    "user_management"
                ],
                "summary": "Delete users (role: Admin only)",
                "operationId": "deleteUsers",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "path",
                        "description": "User ID (comma-separated for multiple)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "1,2,3"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Lesson not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "name": "bearerAuth",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Authentication endpoints"
        },
        {
            "name": "Certificates",
            "description": "Endpoints for generating, downloading, and verifying certificates"
        },
        {
            "name": "CourseReviews",
            "description": "Endpoints for managing course reviews"
        },
        {
            "name": "Dashboard",
            "description": "Endpoints for fetching LMS dashboard data"
        },
        {
            "name": "Enrollments",
            "description": "Endpoints for managing course enrollments"
        },
        {
            "name": "Lessons",
            "description": "Endpoints for managing lessons (Admin only)"
        },
        {
            "name": "LessonProgress",
            "description": "Endpoints to update lesson progress for enrolled users"
        },
        {
            "name": "QuizAttempts",
            "description": "Endpoints to attempt quizzes and grade essays (Admin)"
        },
        {
            "name": "Quizzes",
            "description": "Endpoints to get quizzes with questions and options"
        },
        {
            "name": "Reports",
            "description": "Endpoints to fetch sales and enrollment reports (Admin only)"
        },
        {
            "name": "Payments",
            "description": "Endpoints for handling course payments via Stripe"
        },
        {
            "name": "business_management",
            "description": "business_management"
        },
        {
            "name": "course_management.course_category",
            "description": "course_management.course_category"
        },
        {
            "name": "course_management.course",
            "description": "course_management.course"
        },
        {
            "name": "Trash",
            "description": "Trash"
        },
        {
            "name": "course_management.course_faq",
            "description": "course_management.course_faq"
        },
        {
            "name": "question_management.options",
            "description": "question_management.options"
        },
        {
            "name": "question_management.question_category",
            "description": "question_management.question_category"
        },
        {
            "name": "question_management.question",
            "description": "question_management.question"
        },
        {
            "name": "section",
            "description": "section"
        },
        {
            "name": "setting",
            "description": "setting"
        },
        {
            "name": "user_management",
            "description": "user_management"
        }
    ]
}